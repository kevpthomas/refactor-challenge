REFACTORTHIS NOTES:

I've tested all of the endpoints fairly carefully, existing functionality seems to be good.
- all Gets work
- all Posts work (see below for dangerous error message)
- all Deletes work; when Delete Product, all ProductOptions are deleted without error

*** NEED TO TEST UPDATES - WHEN SUBMIT NEW VS UPDATE

Deliberately allow submit GUID for POST Production & ProductOption. Need to make a note in feedback README that
this would be a consideration for removal depending on the business requirements.

*** UPDATE - looks like the Product code expects to set the Guid. Should at least comment about this discrepency.

When submit bad request (e.g., duplicate Id when post new Product), dangerous error details are exposed
{
  "Message": "An error has occurred.",
  "ExceptionMessage": "Violation of PRIMARY KEY constraint 'PK__Product__3214EC073E1E30BC'. Cannot insert duplicate key in object 'dbo.Product'. The duplicate key value is (9f2e9176-35ee-4f0a-ae55-83023d2db1a4).\r\nThe statement has been terminated.",
  "ExceptionType": "System.Data.SqlClient.SqlException",
  "StackTrace": "   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(String methodName, Boolean async, Int32 timeout, Boolean asyncWrite)\r\n   at System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteNonQuery()\r\n   at RefactorThis.Models.Product.Save() in C:\\Dev\\Sandbox\\refactor-challenge\\RefactorThis\\Models\\Products.cs:line 86\r\n   at RefactorThis.Controllers.ProductsController.Create(Product product) in C:\\Dev\\Sandbox\\refactor-challenge\\RefactorThis\\Controllers\\ProductsController.cs:line 54\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.<>c__DisplayClass6_1.<GetExecutor>b__0(Object instance, Object[] methodParameters)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionExecutor.Execute(Object instance, Object[] arguments)\r\n   at System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(HttpControllerContext controllerContext, IDictionary`2 arguments, CancellationToken cancellationToken)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__15.MoveNext()"
}